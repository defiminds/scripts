#!/bin/bash

# Função para configurar o token do GitHub
configure_token() {
    read -p "Insira seu token do GitHub: " token
    git config --global github.token $token
    echo "Token configurado com sucesso!"
}

# Função para enviar os arquivos do diretório atual para o repositório no GitHub
send_files() {
    read -p "Insira o nome do repositório: " repo_name
    git init
    git add .
    git commit -m "Adicionando arquivos"
    git remote add origin https://github.com/seu-usuario/$repo_name.git
    git push -u origin master
    echo "Arquivos enviados com sucesso!"
}

# Função para baixar um repositório do GitHub usando a linha de comando
download_repo() {
    read -p "Insira o nome do repositório: " repo_name
    git clone https://github.com/seu-usuario/$repo_name.git
    echo "Repositório baixado com sucesso!"
}

# Função para criar um repositório e adicioná-lo à sua conta no GitHub
create_repo() {
    read -p "Insira o nome do repositório: " repo_name
    read -p "Insira uma descrição para o repositório: " repo_description
    read -p "Deseja tornar o repositório público? (S/N): " repo_visibility
    if [ "$repo_visibility" = "S" ] || [ "$repo_visibility" = "s" ]; then
        visibility="public"
    else
        visibility="private"
    fi
    curl -u "seu-usuario" https://api.github.com/user/repos -d "{\"name\":\"$repo_name\", \"description\":\"$repo_description\", \"private\": $visibility}"
    echo "Repositório criado com sucesso!"
}

# Loop principal do menu
while true; do
    echo "MENU"
    echo "1. Configurar token"
    echo "2. Enviar arquivos para repositório"
    echo "3. Baixar repositório"
    echo "4. Criar repositório"
    echo "5. Sair"
    read -p "Selecione uma opção: " option
    case $option in
        1) configure_token;;
        2) send_files;;
        3) download_repo;;
        4) create_repo;;
        5) exit;;
        *) echo "Opção inválida";;
    esac
done
