#!/bin/bash

# Define the encryption algorithms
declare -A encryption_algorithms
encryption_algorithms["1"]="Base64"
encryption_algorithms["2"]="AES-256"

# Define the custom base
custom_base=( "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z" "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z" "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "+" "/" )

# Encode data using Base64
function base64_encode {
    input_file=$1
    output_file=$2
    base64 "$input_file" > "$output_file"
}

# Encrypt data using AES-256
function aes_encrypt {
    input_file=$1
    output_file=$2
    key=$3
    iv=$4
    openssl enc -aes-256-cbc -salt -in "$input_file" -out "$output_file" -pass "pass:$key" -iv "$iv"
}

# Prompt the user to choose an encryption algorithm
echo "Select an encryption algorithm:"
for key in "${!encryption_algorithms[@]}"; do
    echo "$key) ${encryption_algorithms[$key]}"
done
read -p "Enter the algorithm number: " algorithm_number
encryption_algorithm="${encryption_algorithms[$algorithm_number]}"
if [ -z "$encryption_algorithm" ]; then
    echo "Invalid algorithm number."
    exit 1
fi

# Prompt the user for the input and output files
read -p "Enter the input file: " input_file
if [ ! -f "$input_file" ]; then
    echo "Input file not found."
    exit 1
fi
read -p "Enter the output file: " output_file

if [ "$encryption_algorithm" == "Base64" ]; then
    base64_encode "$input_file" "$output_file"
    echo "File encrypted using Base64."
elif [ "$encryption_algorithm" == "AES-256" ]; then
    read -p "Enter the encryption key: " key
    read -p "Enter the initialization vector (IV): " iv
    aes_encrypt "$input_file" "$output_file" "$key" "$iv"
    echo "File encrypted using AES-256."
fi
