#!/bin/bash
i2pinstall() {
i2pinstal() {
# Function to install i2p
install_i2p() {
  clear
  echo "This script installs i2p with the correct steps following the official tutorial."
  echo "Press Enter to continue or q to quit"
  read enter
  if [ $enter == "q" ]; then
    exit
  else
    echo "Downloading i2p.."
  fi
  
  sudo apt -y install apt-transport-https lsb-release curl
  echo "Inserting i2p repo." && sleep 2
  echo "deb [signed-by=/usr/share/keyrings/i2p-archive-keyring.gpg] https://deb.i2p2.de/ $(lsb_release -sc) main" \ | sudo tee /etc/apt/sources.list.d/i2p.list
  echo "Downloading the GPG Key of i2p." && sleep 2
  curl -o /home/$USER/i2p-archive-keyring.gpg https://geti2p.net/_static/i2p-archive-keyring.gpg
  gpg --keyid-format long --import --import-options show-only --with-fingerprint /home/$USER/i2p-archive-keyring.gpg
  sudo cp /home/$USER/i2p-archive-keyring.gpg /usr/share/keyrings
  sudo ln -sf /usr/share/keyrings/i2p-archive-keyring.gpg /etc/apt/trusted.gpg.d/i2p-archive-keyring.gpg
  sudo apt -y update
  sudo apt -y install i2p i2p-keyring
  echo "i2p has been installed! Start now? y/n"
  read startnow
  if [ $startnow == "y" ]; then
    i2prouter start
  else
    echo "Ok"
  fi
}

# Function to remove i2p
remove_i2p() {
  clear
  echo "This script removes i2p from the system."
  echo "Press Enter to continue or q to quit"
  read enter
  if [ $enter == "q" ]; then
    exit
  else
    echo "Removing i2p.."
  fi
  
  sudo apt -y remove i2p i2p-keyring
  sudo rm /etc/apt/sources.list.d/i2p.list
  sudo rm /usr/share/keyrings/i2p-archive-keyring.gpg
  sudo apt -y update
  echo "i2p has been removed from the system."
}

# Function to update i2p
update_i2p() {
  clear
  echo "This script updates i2p to the latest version using the same installation steps."
  echo "Press Enter to continue or q to quit"
  read enter
  if [ $enter == "q" ]; then
    exit
  else
    echo "Updating i2p.."
  fi
  
  # Remove i2p first
  remove_i2p
  
  # Re-install i2p
  install_i2p
}

# Function to preconfig the Bitcoin node over I2P
bitcoin_node() {
# Start I2P router
sudo service i2p start
# Configure Bitcoin to use I2P
sudo sh -c "echo 'onlynet=i2p' >> /etc/bitcoin/bitcoin.conf"
sudo sh -c "echo 'onion=127.0.0.1:7656' >> /etc/bitcoin/bitcoin.conf"
sudo sh -c "echo 'bind=127.0.0.1' >> /etc/bitcoin/bitcoin.conf"
sudo sh -c "echo 'dnsseed=0' >> /etc/bitcoin/bitcoin.conf"
sudo sh -c "echo 'discover=0' >> /etc/bitcoin/bitcoin.conf"
# Restart Bitcoin
sudo service bitcoind restart
# Display I2P router information
echo "I2P router information:"
sudo cat /var/lib/i2p/i2p-config/i2p-config-file
}

bitcoin_clearnode() {
# Stop Bitcoin
sudo service bitcoind stop
# Remove I2P-related options from the Bitcoin configuration file
sudo sed -i '/onlynet=i2p/d' /etc/bitcoin/bitcoin.conf
sudo sed -i '/onion=127.0.0.1:7656/d' /etc/bitcoin/bitcoin.conf
sudo sed -i '/bind=127.0.0.1/d' /etc/bitcoin/bitcoin.conf
sudo sed -i '/dnsseed=0/d' /etc/bitcoin/bitcoin.conf
sudo sed -i '/discover=0/d' /etc/bitcoin/bitcoin.conf
# Restart Bitcoin
sudo service bitcoind start
# Stop I2P router
sudo service i2p stop
# Display message
echo "Bitcoin has been reconfigured to use the clearnet network. I2P has been stopped."
}

# Function to display the main menu
main_menu() {
  clear
  echo "============================="
  echo "  WELCOME TO I2P MANAGER "
  echo "============================="
  echo "1. Install i2p"
  echo "2. Update i2p"
  echo "3. Remove i2p"
  echo "4. bitcoin I2P node"
  echo "5. bitcoin Clear node"
  echo "6. Exit"

  read -p "Enter your choice: " choice
  case $choice in
    1) install_i2p;;
    2) update_i2p;;
    3) remove_i2p;;
    4) bitcoin_node;;
    5) bitcoin_clearnode;;
    6) exit ;;
    *) echo "Invalid choice. Please try again." && sleep 2 && main_menu ;;
  esac
}    
}
# Ask user for input
read -p "Do you want to install i2p install ? (y/n) " choice
# Check user input
if [[ "$choice" == [yY] ]]; then
  i2pinstal
else
  echo "i2p install installation canceled by user"
fi
}
i2pinstall
